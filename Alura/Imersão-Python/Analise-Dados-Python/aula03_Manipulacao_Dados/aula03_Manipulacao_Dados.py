# -*- coding: utf-8 -*-
"""Aula03.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HsrNVDYpbUjI-OnwS2VXHgQgH3FErsJi

#**Aula 03 - Manipulação de dados com bibliotecas python**


---
"""

import pandas as pd

df_principal = pd.read_excel("/Tabela_Completa_Imersao.xlsx", sheet_name="Principal")
df_principal.head(10)

"""#**Descartando colunas e criando novas colunas**


---



"""

df_principal = df_principal[['Ativo', 'Data', 'Último (R$)', 'Var. Dia (%)']].copy()
df_principal

"""## **Renomear colunas**


---


"""

df_principal = df_principal.rename(columns={'Último (R$)':'valor_final','Var. Dia (%)':'var_dia_pct'}).copy()
df_principal

"""# **Transformar a variação em valor de porcentagem**


---


"""

df_principal ['var_pct'] = df_principal['var_dia_pct'] /100
df_principal['valor_inicial'] = df_principal['valor_final'] / (df_principal['var_pct'] +1)
df_principal

"""# **Importando quantidade de ações e usando a  função merge**


---


"""

df_Total_acoes = pd.read_excel("/Tabela_Completa_Imersao.xlsx", sheet_name="Total_de_acoes")
df_Total_acoes

"""# **Associando tabelas**


---


"""

df_principal = df_principal.merge(df_Total_acoes, left_on='Ativo', right_on='Código', how='left')
df_principal

"""# **Removendo uma coluna**


---


"""

df_principal= df_principal.drop(columns=['Código'])
df_principal

"""# **Criando novas coluna com operações de novos valores**


---


"""

df_principal["Variacao_RS"] = (df_principal['valor_final'] - df_principal['valor_inicial'])*df_principal['Qtde. Teórica']
df_principal

"""# **Formatando números float**


---


"""

pd.options.display.float_format = '{:.2f}'.format

df_principal

"""# **Converter o tipo para inteiro**


---



"""

df_principal['Qtde. Teórica'] =df_principal['Qtde. Teórica'].astype(int)
df_principal

"""# **Mudar os nomes da coluna**


---


"""

df_principal=df_principal.rename(columns={'Qtde. Teórica':'Quantia_Teórica'}).copy()
df_principal

"""#**Manipulando coluna resultado usando if , else para ver se "Subiu" ou "Desceu"**


---



"""

df_principal['resultado'] = df_principal['Variacao_RS'].apply(lambda x: "Subiu" if x > 0 else ("Desceu" if x < 0 else "Estável"))
df_principal

"""# **Agora associar outra tabela usando "Merge" com outro dataframe aba "*Ticker*"...**


---


"""

df_Ticker = pd.read_excel("/Tabela_Completa_Imersao.xlsx", sheet_name="Ticker")
df_Ticker

df_principal = df_principal.merge(df_Ticker, left_on="Ativo", right_on="Ticker", how="left")
df_principal = df_principal.drop(columns=["Ticker"])
df_principal

"""# **Com aba ChatGPT**


---


"""

df_ChatGPT = pd.read_excel("/Tabela_Completa_Imersao.xlsx", sheet_name="ChatGPT")
df_ChatGPT

df_ChatGPT = df_ChatGPT.rename(columns={"Nome":"nome_empresa"}).copy()
df_ChatGPT

df_principal = df_principal.merge(df_ChatGPT, left_on="Nome", right_on="Empresa", how="left")
df_principal = df_principal.drop(columns=["Empresa"])
df_principal

df_ChatGPT

"""# **Coluna "Cat idade"**


---


"""

df_principal['Categoria de idade'] = df_principal['Idade'].apply(lambda x: "Mais de 100 anos" if x > 100 else ("Menos de 50 anos" if x < 50 else "Entre 50 e 100 anos"))
df_principal

